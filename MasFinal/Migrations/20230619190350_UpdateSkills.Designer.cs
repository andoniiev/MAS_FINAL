// <auto-generated />
using System;
using MasFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasFinal.Migrations
{
    [DbContext(typeof(MasFinalContext))]
    [Migration("20230619190350_UpdateSkills")]
    partial class UpdateSkills
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeListId", "SkillListId");

                    b.HasIndex("SkillListId");

                    b.ToTable("SkillEmployee", (string)null);
                });

            modelBuilder.Entity("JobPostingSkill", b =>
                {
                    b.Property<int>("JobPostingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequiredSkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("JobPostingId", "RequiredSkillsId");

                    b.HasIndex("RequiredSkillsId");

                    b.ToTable("JobPostingSkill");
                });

            modelBuilder.Entity("MasFinal.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Category");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Organisation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Organisation");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Certifications", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CompanyName");

                    b.Property<string>("CompanySite")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CompanySite");

                    b.Property<int>("YearFounded")
                        .HasColumnType("INTEGER")
                        .HasColumnName("YearFounded");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Educations", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.EmployeeCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<DateTime>("AcquisitonDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("AcquisitionDate");

                    b.Property<int>("CertificationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("TEXT")
                        .HasColumnName("ValidUntil");

                    b.HasKey("Id");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCertifications", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompanyId");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("EndTime");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Position");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Experiences", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ApplicantId");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("ApplicationDate");

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Comments");

                    b.Property<int>("JobPostingId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("JobPostingId");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("JobPostingId");

                    b.ToTable("JobApplications", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.JobPosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int>("MaxDaysPosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(60)
                        .HasColumnName("MaxDaysPosted");

                    b.Property<int>("RecruiterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RecruiterId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("JobPostings", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int?>("AccountBalance")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AccountBalance");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("AccountNumber");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Amount");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("BankName");

                    b.Property<int?>("CardBalance")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CardBalance");

                    b.Property<string>("CreditNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CreditNumber");

                    b.Property<string>("PayerEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("PayerEmail");

                    b.Property<string>("PayerName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("PayerName");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PaymentType");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfBirth")
                        .HasAnnotation("CheckDateOfBirth", "DateOfBirth <= GETDATE()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("FirstName")
                        .HasAnnotation("RegularExpression", "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("LastName")
                        .HasAnnotation("RegularExpression", "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");

                    b.Property<int>("Pesel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Pesel")
                        .HasAnnotation("RegularExpression", "^[0-9]{2}([02468]1|[13579][012])(0[1-9]|1[0-9]|2[0-9]|3[01])[0-9]{5}$");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Sex");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MasFinal.Models.Posting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompanyId");

                    b.Property<string>("PostingText")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PostingText");

                    b.Property<DateTime>("PostingTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("PostingTime");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Postings", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Skills", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Employee", b =>
                {
                    b.HasBaseType("MasFinal.Models.Person");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("MasFinal.Models.Recruiter", b =>
                {
                    b.HasBaseType("MasFinal.Models.Person");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OwnedCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecruiterType")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CurrentCompanyId")
                        .IsUnique();

                    b.HasIndex("OwnedCompanyId")
                        .IsUnique();

                    b.ToTable("Recruiters", (string)null);
                });

            modelBuilder.Entity("EmployeeSkill", b =>
                {
                    b.HasOne("MasFinal.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobPostingSkill", b =>
                {
                    b.HasOne("MasFinal.Models.JobPosting", null)
                        .WithMany()
                        .HasForeignKey("JobPostingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("RequiredSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasFinal.Models.Certification", b =>
                {
                    b.HasOne("MasFinal.Models.Employee", null)
                        .WithMany("Certifications")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("MasFinal.Models.Education", b =>
                {
                    b.HasOne("MasFinal.Models.Employee", null)
                        .WithMany("Educations")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("MasFinal.Models.EmployeeCertification", b =>
                {
                    b.HasOne("MasFinal.Models.Certification", "Certification")
                        .WithMany()
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certification");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MasFinal.Models.Experience", b =>
                {
                    b.HasOne("MasFinal.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Employee", "Employee")
                        .WithMany("ExperienceList")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MasFinal.Models.JobApplication", b =>
                {
                    b.HasOne("MasFinal.Models.Employee", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.JobPosting", "JobPosting")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobPostingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("JobPosting");
                });

            modelBuilder.Entity("MasFinal.Models.JobPosting", b =>
                {
                    b.HasOne("MasFinal.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Recruiter", "Recruiter")
                        .WithMany("JobPostings")
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("MasFinal.Models.Posting", b =>
                {
                    b.HasOne("MasFinal.Models.Company", "Company")
                        .WithMany("Postings")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MasFinal.Models.Employee", b =>
                {
                    b.HasOne("MasFinal.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MasFinal.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MasFinal.Models.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MasFinal.Models.Recruiter", b =>
                {
                    b.HasOne("MasFinal.Models.Company", "CurrentCompany")
                        .WithOne()
                        .HasForeignKey("MasFinal.Models.Recruiter", "CurrentCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MasFinal.Models.Recruiter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinal.Models.Company", "OwnedCompany")
                        .WithOne()
                        .HasForeignKey("MasFinal.Models.Recruiter", "OwnedCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CurrentCompany");

                    b.Navigation("OwnedCompany");
                });

            modelBuilder.Entity("MasFinal.Models.Company", b =>
                {
                    b.Navigation("Postings");
                });

            modelBuilder.Entity("MasFinal.Models.JobPosting", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("MasFinal.Models.Employee", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Educations");

                    b.Navigation("ExperienceList");
                });

            modelBuilder.Entity("MasFinal.Models.Recruiter", b =>
                {
                    b.Navigation("JobPostings");
                });
#pragma warning restore 612, 618
        }
    }
}
